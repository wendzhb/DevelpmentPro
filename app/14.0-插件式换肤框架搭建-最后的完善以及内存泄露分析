1.换肤框架的完善

    1.1 每次打开如果换肤了是一个新的皮肤：
        需要保存当前皮肤
    1.2 重新进入应用需要换肤
        保证代码的健壮性
    1.3 恢复默认

    1.4 自定义view怎么处理
        目前只是支持 src textcolor backgroud
        自定义view很多，但是项目中应用的自定义view数量有限

2.内存泄漏监测以及分析

    2.1 GC的问题垃圾回收
        new malloc free delete C C++
        如果该对象没有被使用（引用）就会被回收

        system.gc();当内存不够的时候，gc的时候会停止正在运行的其他线程
        内存泄漏往往就是对象后面不会用到了，但是另外某一个对象还持有该对象的引用

        套路：activity和view ，第一个关注activity有没有被回收

        当你推到最前面的activity代表整个应用只有一个activity实例了，到后面如果发现还有有多个activity实例，代表activity没有被
        回收
    2.2 怎么样去检测内存泄漏

3.最后的总结以及下周的任务介绍